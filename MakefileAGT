# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    MakefileAGT                                        :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: agiliber <agiliber@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/06/20 10:25:55 by agiliber          #+#    #+#              #
#    Updated: 2024/09/13 13:49:42 by agiliber         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# ------------------------------------------------------------------------------
# 								HEADER
# ------------------------------------------------------------------------------

NAME_LIB = libft.a
NAME = minishell
NAME_A = minishell.a

# ------------------------------------------------------------------------------
# 								COMPILATION
# ------------------------------------------------------------------------------

CC = cc
CFLAGS = -Wall -Wextra -Werror -I./includes/
RM = rm -rf
LIBFT_FLAGS = -L./$(LIB_DIR) -l:libft.a

RED    = \033[31m
GREEN  = \033[32m
YELLOW = \033[33m
BLUE   = \033[34m
MAGENTA= \033[35m
CYAN   = \033[36m
RESET  = \033[0m

# ------------------------------------------------------------------------------
# 									DIR
# ------------------------------------------------------------------------------

LIB_DIR = libft/
BUILTINS_DIR = src/builtins/
LEXER_DIR = src/lexer/
PARSER_DIR = src/parser/
REDIREC_DIR = src/redirections/

SRC_DIR = $(BUILTINS_DIR, LEXER_DIR, PARSER_DIR, REDIREC_DIR)

BUILTINS_OBJ_DIR = obj/builtins/
LEXER_OBJ_DIR = obj/lexer/
PARSER_OBJ_DIR = obj/parser/
REDIREC_OBJ_DIR = obj/redirections/

OBJ_DIR = $(BUILTINS_OBJ_DIR, LEXER_OBJ_DIR, PARSER_OBJ_DIR, REDIREC_OBJ_DIR)

BUILTINS_OBJ_DEP = dep/builtins/
LEXER_OBJ_DEP = dep/lexer/
PARSER_OBJ_DEP = dep/parser/
REDIREC_OBJ_DEP = dep/redirections/

DEP_DIR = $(BUILTINS_OBJ_DEP, LEXER_OBJ_DEP, PARSER_OBJ_DEP, REDIREC_OBJ_DEP)

# ------------------------------------------------------------------------------
# 									FILES
# ------------------------------------------------------------------------------

BUILTINS = builtins.c echo.c cd.c env.c export.c ft_export_utiles.c \
	ft_utiles_cd_prev.c ft_utiles_cd.c ft_utiles_echo.c ft_utiles_echo2.c \
	pwd.c

LEXER = handler.c init_lexer.c lexer_utils.c lexer.c

PARSER = parser_utils.c parser.c parsing_error.c main.c

REDIREC = exec_cmd_minishell.c get_path_cmd.c

BUILTINSF = $(addprefix $(BUILTINS_DIR), $(BUILTINS))
LEXERF = $(addprefix $(LEXER_DIR), $(LEXER))
PARSERF = $(addprefix $(PARSER_DIR), $(PARSER))
REDIRECF = $(addprefix $(REDIREC_DIR), $(REDIREC))

BUILTINS_OBJ = $(addprefix $(BUILTINS_OBJ_DIROBJ_DIR), $(SRC:%.c=%.o))s
LEXER_OBJ = $(addprefix $(LEXER_OBJ_DIR), $(SRC:%.c=%.o))
PARSER_OBJ = $(addprefix $(PARSER_OBJ_DIR), $(SRC:%.c=%.o))
REDIREC_OBJ = $(addprefix $(REDIREC_OBJ_DIR), $(SRC:%.c=%.o))

BUILTINS_DEP = $(addprefix $(BUILTINS_OBJ_DEP), $(BUILTINS_OBJ:%.o=%.d))
LEXER_DEP = $(addprefix $(LEXER_OBJ_DEP), $(LEXER_OBJ:%.o=%.d))
PARSER_DEP = $(addprefix $(PARSER_OBJ_DEP), $(PARSER_OBJ:%.o=%.d))
REDIREC_DEP = $(addprefix $(REDIREC_OBJ_DEP), $(REDIREC_OBJ:%.o=%.d))

SRC = $(BUILTINSF, LEXERF, )
OBJ = $(BUILTINS_OBJ, LEXER_OBJ, PARSER_OBJ, REDIREC_OBJ)
DEP = $(BUILTINS_DEP, LEXER_DEP, PARSER_DEP, REDIREC_DEP)

LIBFT_OBJ = $(addprefix $(LIB_DIR), $(NAME_LIB))

# ------------------------------------------------------------------------------
# 									COMMANDS
# ------------------------------------------------------------------------------

all : $(NAME)

$(NAME) : $(NAME_A) $(OBJ) | $(LIBFT_OBJ)
	echo "${CYAN}Compiling Minishell...${RESET}"
	$(CC) $(CFLAGS) $(OBJ) $(LIBFT_FLAGS) $(NAME_A) -o $@
	echo "${GREEN}Succes!!!${RESET}"

$(LIBFT_OBJ) :
	echo "${CYAN}Compiling libft...${RESET}"
	make --no-print-directory -C $(LIB_DIR)
	cp libft/libft.a $(NAME_A)
	ar rc $(NAME_A) $(OBJ)

$(OBJ_DIR)%.o : $(SRC_DIR)%.c | $(OBJ_DIR) $(DEP)
	$(CC) $(CFLAGS) -MMD -MP -c $< -o $@

$(OBJ_DIR) :
	mkdir -p $(OBJ_DIR)

clean:
	rm -rf $(OBJ_DIR)
	make clean -C $(LIB_DIR)
	make clean -C $(MINILIBX)
	@echo "Cleaned"

fclean: clean
	rm -f $(NAME)
	make fclean -C $(LIB_DIR)

re : fclean all

.PHONY : all clean fclean re

-include $(DEP)
